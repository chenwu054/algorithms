/*
  bit vector
*/
public int[] missingNumAndTwiceNum(int[] num){
	int[] a=new int[num.length>>5+1];
	int[] ret=new int[2];
	for(int i=0;i<num.length;i++){
		if(a[num[i]>>5]&(1<<(num[1]&0x1f))>0)
			ret[0]=num[i];
		else
			a[num[i]>>5]|=1<<(num[1]&0x1f);
	}
	for(int i=1;i<=num.length;i++){
		if(a[i>>5]&1<<(i&0x1f)==0){
			ret[1]=i;
			break;
		}
	}
	return ret;
}
/*
  counting sort
*/
public int[] missingNumAndTwiceNum(int[] num){
	int n = num.length;
	int[] ret = new int[2];
	int i=0;
	while(i<num.length){
		while(num[i]!=i+1 && num[num[i]]!=num[i]+1)
			swap(num,i,num[i]);
		i++;
	}
	for(int i=0;i<num.length;i++){
		if(num[i]!=i+1){
			ret[0]=num[i];
			ret[1]=i+1;
		}
	}
	return ret;
}
